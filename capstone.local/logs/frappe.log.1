2024-06-06 17:54:01,908 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doc': '{"name":"2bc94921ef","owner":"joric@newuser.com","creation":"2024-06-06 17:27:32.009519","modified":"2024-06-06 17:27:32.009519","modified_by":"joric@newuser.com","docstatus":0,"idx":0,"file_name":"Logo.png","is_private":0,"file_type":"PNG","is_home_folder":0,"is_attachments_folder":0,"file_size":346267,"file_url":"/private/files/Logo.png","folder":"Home","is_folder":0,"attached_to_doctype":"Website Settings","attached_to_name":"Website Settings","attached_to_field":"banner_image","content_hash":"b002ba124e0896a15b2bdd86aad046cf","uploaded_to_dropbox":0,"uploaded_to_google_drive":0,"doctype":"File","__last_sync_on":"2024-06-06T09:52:57.569Z","__unsaved":1}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
2024-06-12 08:57:07,790 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":null}', 'cmd': 'frappe.client.set_value'}
2024-06-12 09:05:25,344 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":null}', 'cmd': 'frappe.client.set_value'}
2024-06-12 09:15:00,888 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":3}', 'cmd': 'frappe.client.set_value'}
2024-06-12 09:16:10,194 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":5}', 'cmd': 'frappe.client.set_value'}
2024-06-12 09:20:51,892 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":5}', 'cmd': 'frappe.client.set_value'}
2024-06-12 09:29:14,045 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': '{"attendance_score":5}', 'cmd': 'frappe.client.set_value'}
2024-06-12 11:35:09,472 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': 'assignment_score', 'value': '100', 'cmd': 'frappe.client.set_value'}
2024-06-12 12:13:24,598 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'comment_by': 'Joric  Bartolo', 'comment_email': 'joric@newuser.com', 'comment': 'Hi is this working?', 'reference_doctype': 'Web Page', 'reference_name': 'announcement', 'comment_type': 'Comment', 'route': 'announcement', 'cmd': 'frappe.templates.includes.comments.comments.add_comment'}
2024-06-12 14:25:09,317 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doctype': 'Grades', 'fieldname': 'assignment_score', 'value': '100', 'cmd': 'frappe.client.set_value'}
2024-06-15 07:33:02,346 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'fields': '["student_applicant","student_name,"program","course_schedule","date","status"]'}
2024-06-15 07:33:06,081 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'fields': '["student_applicant","student_name,"program","course_schedule","date","status"]'}
2024-06-15 07:46:55,878 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'fields': '["student_name,"program","course_schedule","date","status"]'}
2024-06-15 11:00:03,550 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'fields': '[{0},"assignment_number","score","status"]'}
2024-06-15 11:00:05,092 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'fields': '[{0},"assignment_number","score","status"]'}
2024-06-20 01:33:34,979 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doc': '{"docstatus":0,"doctype":"Grades","name":"new-grades-nurhfwqmlm","__islocal":1,"__unsaved":1,"owner":"joric@newuser.com","student":"EDU-STU-2024-00001","course":"English","grading_period":"1st Grading","assignment_score":""}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
2024-06-20 01:34:35,355 ERROR frappe New Exception collected in error log
Site: capstone.local
Form Dict: {'doc': '{"docstatus":0,"doctype":"Grades","name":"new-grades-rrbqdiknmm","__islocal":1,"__unsaved":1,"owner":"joric@newuser.com","student":"EDU-STU-2024-00001","course":"English","grading_period":"1st Grading"}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
2024-06-20 06:15:06,129 ERROR frappe Could not take error snapshot: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
Site: capstone.local
Form Dict: {'doc': '{"name":"performance","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":0,"title":"Performance","route":"performance","dynamic_route":0,"published":1,"content_type":"HTML","dynamic_template":0,"main_section_html":"<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"UTF-8\\">\\r\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\r\\n    <title>Student Grades - Green Field Elementary School System</title>\\r\\n    <style>\\r\\n        body {\\r\\n            font-family: Arial, sans-serif;\\r\\n            background: linear-gradient(to right, #0097b2, #7ed757);\\r\\n            margin: 0;\\r\\n            padding: 0;\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            height: 100vh;\\r\\n            width: 100vw;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n\\r\\n        header {\\r\\n            display: flex;\\r\\n            justify-content: space-between;\\r\\n            width: 100%;\\r\\n            padding: 5px 20px;\\r\\n            align-items: center;\\r\\n            box-sizing: border-box;\\r\\n            max-width: 1000px; /* Fixed width for the header */\\r\\n            margin: 0 auto; /* Center align the header */\\r\\n        }\\r\\n\\r\\n        .header-left, .header-right {\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-left img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-right: 600px;\\r\\n            margin-left: 0px;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-right img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-left: 10px;\\r\\n            margin-right: 0px;\\r\\n        }\\r\\n\\r\\n        main {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n            flex: 1;\\r\\n            width: 100%;\\r\\n            padding: 20px;\\r\\n            box-sizing: border-box;\\r\\n        }\\r\\n\\r\\n        .table-container {\\r\\n            width: 100%; /* Increased width for the table container */\\r\\n            background-color: #fff;\\r\\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n            border-radius: 10px;\\r\\n            padding-bottom: 150px; /* Add more padding to the bottom */\\r\\n            overflow: auto; /* Make the table scrollable */\\r\\n            max-height: 70vh; /* Limit the maximum height for scrolling */\\r\\n        }\\r\\n\\r\\n        table {\\r\\n            width: 100%; /* Stretch the table to fill the container */\\r\\n            border-collapse: collapse;\\r\\n        }\\r\\n\\r\\n        th, td {\\r\\n            padding: 15px;\\r\\n            text-align: left;\\r\\n            border-bottom: 1px solid #ddd;\\r\\n        }\\r\\n\\r\\n        th {\\r\\n            background-color: #009B8F;\\r\\n            color: #fff;\\r\\n            font-weight: bold;\\r\\n        }\\r\\n\\r\\n        tr:nth-child(even) {\\r\\n            background-color: #f2f2f2;\\r\\n        }\\r\\n\\r\\n        .back-button {\\r\\n            position: fixed;\\r\\n            bottom: 20px;\\r\\n            right: 20px;\\r\\n            padding: 10px 50px;\\r\\n            font-size: 1em;\\r\\n            color: #323430;\\r\\n            background-color: #F8FFED;\\r\\n            border: none;\\r\\n            border-radius: 25px;\\r\\n            cursor: pointer;\\r\\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n            z-index: 1000;\\r\\n        }\\r\\n\\r\\n        .back-button:hover {\\r\\n            background-color: #40E0D0;\\r\\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\r\\n        }\\r\\n    </style>\\r\\n</head>\\r\\n<body>\\r\\n    <header>\\r\\n        <div class=\\"header-left\\">\\r\\n            <img src=\\"/files/PERFORMANCE MONITORING ICON.png\\" alt=\\"Performance Icon\\">\\r\\n        </div>\\r\\n        <div class=\\"header-right\\">\\r\\n            <img src=\\"/files/new logo.png\\" alt=\\"School Logo\\">\\r\\n        </div>\\r\\n    </header>\\r\\n    <main>\\r\\n        <div class=\\"table-container\\">\\r\\n            <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Student ID</th>\\r\\n                        <th>Attendance Points</th>\\r\\n                        <th>Assignment Points</th>\\r\\n                        <th>Final Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <!-- Data will be populated here by JavaScript -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </main>\\r\\n    <button class=\\"back-button\\" id=\\"back-button\\">Back</button>\\r\\n    <script>\\r\\n        document.addEventListener(\'DOMContentLoaded\', () => {\\r\\n            const loggedInUserEmail = frappe.session.user;\\r\\n\\r\\n            Promise.all([\\r\\n                fetch(\'/api/resource/Student?fields=[\\"name\\",\\"student_name\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Assignment?fields=[\\"student\\",\\"score\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Attendance?fields=[\\"student\\",\\"status\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data)\\r\\n            ]).then(([students, assignments, attendance]) => {\\r\\n                let filteredStudents;\\r\\n                if (loggedInUserEmail === \'joric@newuser.com\') {\\r\\n                    filteredStudents = students;\\r\\n                } else {\\r\\n                    filteredStudents = students.filter(student => student.student_email_id === loggedInUserEmail);\\r\\n                }\\r\\n\\r\\n                renderGradesTable(filteredStudents, assignments, attendance);\\r\\n            }).catch(error => {\\r\\n                console.error(\'Error fetching data:\', error);\\r\\n            });\\r\\n\\r\\n            function renderGradesTable(students, assignments, attendance) {\\r\\n                const tbody = document.querySelector(\'tbody\');\\r\\n                tbody.innerHTML = \'\'; // Clear existing rows\\r\\n\\r\\n                students.forEach(student => {\\r\\n                    const studentAssignments = assignments.filter(a => a.student === student.name);\\r\\n                    const studentAttendance = attendance.filter(a => a.student === student.name);\\r\\n\\r\\n                    const finalGrade = calculateFinalGrade(studentAssignments, studentAttendance);\\r\\n\\r\\n                    const row = document.createElement(\'tr\');\\r\\n\\r\\n                    const studentNameCell = document.createElement(\'td\');\\r\\n                    studentNameCell.textContent = student.student_name || \'N/A\';\\r\\n                    row.appendChild(studentNameCell);\\r\\n\\r\\n                    const totalAttendancePointsCell = document.createElement(\'td\');\\r\\n                    totalAttendancePointsCell.textContent = finalGrade.attendancePoints;\\r\\n                    row.appendChild(totalAttendancePointsCell);\\r\\n\\r\\n                    const totalAssignmentPointsCell = document.createElement(\'td\');\\r\\n                    totalAssignmentPointsCell.textContent = finalGrade.assignmentPoints;\\r\\n                    row.appendChild(totalAssignmentPointsCell);\\r\\n\\r\\n                    const finalRatingCell = document.createElement(\'td\');\\r\\n                    finalRatingCell.textContent = finalGrade.finalGrade;\\r\\n                    row.appendChild(finalRatingCell);\\r\\n\\r\\n                    tbody.appendChild(row);\\r\\n                });\\r\\n            }\\r\\n\\r\\n            function calculateFinalGrade(assignments, attendance) {\\r\\n                // Assign values to status based on the given criteria\\r\\n                const statusValues = {\\r\\n                    \'P\': 5,\\r\\n                    \'A\': 0,\\r\\n                    \'MA\': 3,\\r\\n                    \'AA\': 4,\\r\\n                    \'EX\': 3,\\r\\n                    \'ACT\': 4\\r\\n                };\\r\\n\\r\\n                // Calculate total attendance points\\r\\n                let totalAttendancePoints = 0;\\r\\n                attendance.forEach(record => {\\r\\n                    const status = record.status;\\r\\n                    const value = statusValues[status] || 0;\\r\\n                    totalAttendancePoints += value;\\r\\n                });\\r\\n\\r\\n                // Calculate total assignment points\\r\\n                let totalAssignmentPoints = 0;\\r\\n                assignments.forEach(assignment => {\\r\\n                    const score = parseFloat(assignment.score) || 0;\\r\\n                    totalAssignmentPoints += score;\\r\\n                });\\r\\n\\r\\n                // Calculate final grade based on weighted percentages (Attendance: 30%, Assignments: 70%)\\r\\n                const attendanceWeight = 0.3;\\r\\n                const assignmentWeight = 0.7;\\r\\n\\r\\n                const totalPoints = totalAttendancePoints * attendanceWeight + totalAssignmentPoints * assignmentWeight;\\r\\n                const maxPossiblePoints = (attendance.length * 5) * attendanceWeight + (assignments.length * 100) * assignmentWeight;\\r\\n                const percentage = (totalPoints / maxPossiblePoints) * 100;\\r\\n\\r\\n                let finalGrade;\\r\\n                if (percentage >= 98) {\\r\\n                    finalGrade = \'1.0 (Excellent)\';\\r\\n                } else if (percentage >= 95) {\\r\\n                    finalGrade = \'1.25\';\\r\\n                } else if (percentage >= 92) {\\r\\n                    finalGrade = \'1.50\';\\r\\n                } else if (percentage >= 89) {\\r\\n                    finalGrade = \'1.75\';\\r\\n                } else if (percentage >= 86) {\\r\\n                    finalGrade = \'2.00 (Very Good)\';\\r\\n                } else if (percentage >= 83) {\\r\\n                    finalGrade = \'2.25\';\\r\\n                } else if (percentage >= 80) {\\r\\n                    finalGrade = \'2.50\';\\r\\n                } else if (percentage >= 77) {\\r\\n                    finalGrade = \'2.75\';\\r\\n                } else if (percentage >= 75) {\\r\\n                    finalGrade = \'3.00 (Good)\';\\r\\n                } else {\\r\\n                    finalGrade = \'Failed\';\\r\\n                }\\r\\n\\r\\n                return {\\r\\n                    attendancePoints: totalAttendancePoints,\\r\\n                    assignmentPoints: totalAssignmentPoints,\\r\\n                    finalGrade: finalGrade\\r\\n                };\\r\\n            }\\r\\n\\r\\n            // Add click event to back button\\r\\n            const backButton = document.getElementById(\'back-button\');\\r\\n            backButton.addEventListener(\'click\', () => {\\r\\n                window.history.back();\\r\\n            });\\r\\n        });\\r\\n    </script>\\r\\n</body>\\r\\n</html>\\r\\n","insert_style":0,"text_align":"Left","full_width":1,"show_title":0,"show_sidebar":0,"enable_comments":0,"doctype":"Web Page","page_blocks":[{"name":"sjsptsg3db","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":1,"web_template":"Section with Collapsible Content","add_container":1,"add_top_padding":1,"add_bottom_padding":1,"add_border_at_top":0,"add_border_at_bottom":0,"add_shade":0,"hide_block":0,"add_background_image":0,"parent":"performance","parentfield":"page_blocks","parenttype":"Web Page","doctype":"Web Page Block"}],"__onload":{"is_website_generator":true,"published":true},"__last_sync_on":"2024-06-19T17:50:12.902Z","__unsaved":1}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/app.py", line 115, in application
    response = frappe.api.handle(request)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/__init__.py", line 49, in handle
    data = endpoint(**arguments)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/v1.py", line 36, in handle_rpc_call
    return frappe.handler.handle()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 49, in handle
    data = execute_cmd(cmd)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 85, in execute_cmd
    return frappe.call(method, **frappe.form_dict)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1768, in call
    return fn(*args, **newargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/typing_validations.py", line 31, in wrapper
    return func(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/desk/form/save.py", line 18, in savedocs
    doc = frappe.get_doc(json.loads(doc))
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 86, in log_error_snapshot
    log_error(title=str(exception), defer_insert=True)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 61, in log_error
    error_log = frappe.get_doc(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
2024-06-20 06:15:14,703 ERROR frappe Could not take error snapshot: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
Site: capstone.local
Form Dict: {'doc': '{"name":"performance","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":0,"title":"Performance","route":"performance","dynamic_route":0,"published":1,"content_type":"HTML","dynamic_template":0,"main_section_html":"<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"UTF-8\\">\\r\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\r\\n    <title>Student Grades - Green Field Elementary School System</title>\\r\\n    <style>\\r\\n        body {\\r\\n            font-family: Arial, sans-serif;\\r\\n            background: linear-gradient(to right, #0097b2, #7ed757);\\r\\n            margin: 0;\\r\\n            padding: 0;\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            height: 100vh;\\r\\n            width: 100vw;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n\\r\\n        header {\\r\\n            display: flex;\\r\\n            justify-content: space-between;\\r\\n            width: 100%;\\r\\n            padding: 5px 20px;\\r\\n            align-items: center;\\r\\n            box-sizing: border-box;\\r\\n            max-width: 1000px; /* Fixed width for the header */\\r\\n            margin: 0 auto; /* Center align the header */\\r\\n        }\\r\\n\\r\\n        .header-left, .header-right {\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-left img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-right: 600px;\\r\\n            margin-left: 0px;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-right img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-left: 10px;\\r\\n            margin-right: 0px;\\r\\n        }\\r\\n\\r\\n        main {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n            flex: 1;\\r\\n            width: 100%;\\r\\n            padding: 20px;\\r\\n            box-sizing: border-box;\\r\\n        }\\r\\n\\r\\n        .table-container {\\r\\n            width: 100%; /* Increased width for the table container */\\r\\n            background-color: #fff;\\r\\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n            border-radius: 10px;\\r\\n            padding-bottom: 150px; /* Add more padding to the bottom */\\r\\n            overflow: auto; /* Make the table scrollable */\\r\\n            max-height: 70vh; /* Limit the maximum height for scrolling */\\r\\n        }\\r\\n\\r\\n        table {\\r\\n            width: 100%; /* Stretch the table to fill the container */\\r\\n            border-collapse: collapse;\\r\\n        }\\r\\n\\r\\n        th, td {\\r\\n            padding: 15px;\\r\\n            text-align: left;\\r\\n            border-bottom: 1px solid #ddd;\\r\\n        }\\r\\n\\r\\n        th {\\r\\n            background-color: #009B8F;\\r\\n            color: #fff;\\r\\n            font-weight: bold;\\r\\n        }\\r\\n\\r\\n        tr:nth-child(even) {\\r\\n            background-color: #f2f2f2;\\r\\n        }\\r\\n\\r\\n        .back-button {\\r\\n            position: fixed;\\r\\n            bottom: 20px;\\r\\n            right: 20px;\\r\\n            padding: 10px 50px;\\r\\n            font-size: 1em;\\r\\n            color: #323430;\\r\\n            background-color: #F8FFED;\\r\\n            border: none;\\r\\n            border-radius: 25px;\\r\\n            cursor: pointer;\\r\\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n            z-index: 1000;\\r\\n        }\\r\\n\\r\\n        .back-button:hover {\\r\\n            background-color: #40E0D0;\\r\\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\r\\n        }\\r\\n    </style>\\r\\n</head>\\r\\n<body>\\r\\n    <header>\\r\\n        <div class=\\"header-left\\">\\r\\n            <img src=\\"/files/PERFORMANCE MONITORING ICON.png\\" alt=\\"Performance Icon\\">\\r\\n        </div>\\r\\n        <div class=\\"header-right\\">\\r\\n            <img src=\\"/files/new logo.png\\" alt=\\"School Logo\\">\\r\\n        </div>\\r\\n    </header>\\r\\n    <main>\\r\\n        <div class=\\"table-container\\">\\r\\n            <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Student ID</th>\\r\\n                        <th>Attendance Points</th>\\r\\n                        <th>Assignment Points</th>\\r\\n                        <th>Final Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <!-- Data will be populated here by JavaScript -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </main>\\r\\n    <button class=\\"back-button\\" id=\\"back-button\\">Back</button>\\r\\n    <script>\\r\\n        document.addEventListener(\'DOMContentLoaded\', () => {\\r\\n            const loggedInUserEmail = frappe.session.user;\\r\\n\\r\\n            Promise.all([\\r\\n                fetch(\'/api/resource/Student?fields=[\\"name\\",\\"student_name\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Assignment?fields=[\\"student\\",\\"score\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Attendance?fields=[\\"student\\",\\"status\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data)\\r\\n            ]).then(([students, assignments, attendance]) => {\\r\\n                let filteredStudents;\\r\\n                if (loggedInUserEmail === \'joric@newuser.com\') {\\r\\n                    filteredStudents = students;\\r\\n                } else {\\r\\n                    filteredStudents = students.filter(student => student.student_email_id === loggedInUserEmail);\\r\\n                }\\r\\n\\r\\n                renderGradesTable(filteredStudents, assignments, attendance);\\r\\n            }).catch(error => {\\r\\n                console.error(\'Error fetching data:\', error);\\r\\n            });\\r\\n\\r\\n            function renderGradesTable(students, assignments, attendance) {\\r\\n                const tbody = document.querySelector(\'tbody\');\\r\\n                tbody.innerHTML = \'\'; // Clear existing rows\\r\\n\\r\\n                students.forEach(student => {\\r\\n                    const studentAssignments = assignments.filter(a => a.student === student.name);\\r\\n                    const studentAttendance = attendance.filter(a => a.student === student.name);\\r\\n\\r\\n                    const finalGrade = calculateFinalGrade(studentAssignments, studentAttendance);\\r\\n\\r\\n                    const row = document.createElement(\'tr\');\\r\\n\\r\\n                    const studentNameCell = document.createElement(\'td\');\\r\\n                    studentNameCell.textContent = student.student_name || \'N/A\';\\r\\n                    row.appendChild(studentNameCell);\\r\\n\\r\\n                    const totalAttendancePointsCell = document.createElement(\'td\');\\r\\n                    totalAttendancePointsCell.textContent = finalGrade.attendancePoints;\\r\\n                    row.appendChild(totalAttendancePointsCell);\\r\\n\\r\\n                    const totalAssignmentPointsCell = document.createElement(\'td\');\\r\\n                    totalAssignmentPointsCell.textContent = finalGrade.assignmentPoints;\\r\\n                    row.appendChild(totalAssignmentPointsCell);\\r\\n\\r\\n                    const finalRatingCell = document.createElement(\'td\');\\r\\n                    finalRatingCell.textContent = finalGrade.finalGrade;\\r\\n                    row.appendChild(finalRatingCell);\\r\\n\\r\\n                    tbody.appendChild(row);\\r\\n                });\\r\\n            }\\r\\n\\r\\n            function calculateFinalGrade(assignments, attendance) {\\r\\n                // Assign values to status based on the given criteria\\r\\n                const statusValues = {\\r\\n                    \'P\': 5,\\r\\n                    \'A\': 0,\\r\\n                    \'MA\': 3,\\r\\n                    \'AA\': 4,\\r\\n                    \'EX\': 3,\\r\\n                    \'ACT\': 4\\r\\n                };\\r\\n\\r\\n                // Calculate total attendance points\\r\\n                let totalAttendancePoints = 0;\\r\\n                attendance.forEach(record => {\\r\\n                    const status = record.status;\\r\\n                    const value = statusValues[status] || 0;\\r\\n                    totalAttendancePoints += value;\\r\\n                });\\r\\n\\r\\n                // Calculate total assignment points\\r\\n                let totalAssignmentPoints = 0;\\r\\n                assignments.forEach(assignment => {\\r\\n                    const score = parseFloat(assignment.score) || 0;\\r\\n                    totalAssignmentPoints += score;\\r\\n                });\\r\\n\\r\\n                // Calculate final grade based on weighted percentages (Attendance: 30%, Assignments: 70%)\\r\\n                const attendanceWeight = 0.3;\\r\\n                const assignmentWeight = 0.7;\\r\\n\\r\\n                const totalPoints = totalAttendancePoints * attendanceWeight + totalAssignmentPoints * assignmentWeight;\\r\\n                const maxPossiblePoints = (attendance.length * 5) * attendanceWeight + (assignments.length * 100) * assignmentWeight;\\r\\n                const percentage = (totalPoints / maxPossiblePoints) * 100;\\r\\n\\r\\n                let finalGrade;\\r\\n                if (percentage >= 98) {\\r\\n                    finalGrade = \'1.0 (Excellent)\';\\r\\n                } else if (percentage >= 95) {\\r\\n                    finalGrade = \'1.25\';\\r\\n                } else if (percentage >= 92) {\\r\\n                    finalGrade = \'1.50\';\\r\\n                } else if (percentage >= 89) {\\r\\n                    finalGrade = \'1.75\';\\r\\n                } else if (percentage >= 86) {\\r\\n                    finalGrade = \'2.00 (Very Good)\';\\r\\n                } else if (percentage >= 83) {\\r\\n                    finalGrade = \'2.25\';\\r\\n                } else if (percentage >= 80) {\\r\\n                    finalGrade = \'2.50\';\\r\\n                } else if (percentage >= 77) {\\r\\n                    finalGrade = \'2.75\';\\r\\n                } else if (percentage >= 75) {\\r\\n                    finalGrade = \'3.00 (Good)\';\\r\\n                } else {\\r\\n                    finalGrade = \'Failed\';\\r\\n                }\\r\\n\\r\\n                return {\\r\\n                    attendancePoints: totalAttendancePoints,\\r\\n                    assignmentPoints: totalAssignmentPoints,\\r\\n                    finalGrade: finalGrade\\r\\n                };\\r\\n            }\\r\\n\\r\\n            // Add click event to back button\\r\\n            const backButton = document.getElementById(\'back-button\');\\r\\n            backButton.addEventListener(\'click\', () => {\\r\\n                window.history.back();\\r\\n            });\\r\\n        });\\r\\n    </script>\\r\\n</body>\\r\\n</html>\\r\\n","insert_style":0,"text_align":"Left","full_width":1,"show_title":0,"show_sidebar":0,"enable_comments":0,"doctype":"Web Page","page_blocks":[{"name":"sjsptsg3db","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":1,"web_template":"Section with Collapsible Content","add_container":1,"add_top_padding":1,"add_bottom_padding":1,"add_border_at_top":0,"add_border_at_bottom":0,"add_shade":0,"hide_block":0,"add_background_image":0,"parent":"performance","parentfield":"page_blocks","parenttype":"Web Page","doctype":"Web Page Block"}],"__onload":{"is_website_generator":true,"published":true},"__last_sync_on":"2024-06-19T17:50:12.902Z","__unsaved":1}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/app.py", line 115, in application
    response = frappe.api.handle(request)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/__init__.py", line 49, in handle
    data = endpoint(**arguments)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/v1.py", line 36, in handle_rpc_call
    return frappe.handler.handle()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 49, in handle
    data = execute_cmd(cmd)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 85, in execute_cmd
    return frappe.call(method, **frappe.form_dict)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1768, in call
    return fn(*args, **newargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/typing_validations.py", line 31, in wrapper
    return func(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/desk/form/save.py", line 18, in savedocs
    doc = frappe.get_doc(json.loads(doc))
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 86, in log_error_snapshot
    log_error(title=str(exception), defer_insert=True)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 61, in log_error
    error_log = frappe.get_doc(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
2024-06-20 06:15:16,706 ERROR frappe Could not take error snapshot: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
Site: capstone.local
Form Dict: {'doc': '{"name":"performance","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":0,"title":"Performance","route":"performance","dynamic_route":0,"published":1,"content_type":"HTML","dynamic_template":0,"main_section_html":"<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"UTF-8\\">\\r\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\r\\n    <title>Student Grades - Green Field Elementary School System</title>\\r\\n    <style>\\r\\n        body {\\r\\n            font-family: Arial, sans-serif;\\r\\n            background: linear-gradient(to right, #0097b2, #7ed757);\\r\\n            margin: 0;\\r\\n            padding: 0;\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            height: 100vh;\\r\\n            width: 100vw;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n\\r\\n        header {\\r\\n            display: flex;\\r\\n            justify-content: space-between;\\r\\n            width: 100%;\\r\\n            padding: 5px 20px;\\r\\n            align-items: center;\\r\\n            box-sizing: border-box;\\r\\n            max-width: 1000px; /* Fixed width for the header */\\r\\n            margin: 0 auto; /* Center align the header */\\r\\n        }\\r\\n\\r\\n        .header-left, .header-right {\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-left img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-right: 600px;\\r\\n            margin-left: 0px;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-right img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-left: 10px;\\r\\n            margin-right: 0px;\\r\\n        }\\r\\n\\r\\n        main {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n            flex: 1;\\r\\n            width: 100%;\\r\\n            padding: 20px;\\r\\n            box-sizing: border-box;\\r\\n        }\\r\\n\\r\\n        .table-container {\\r\\n            width: 100%; /* Increased width for the table container */\\r\\n            background-color: #fff;\\r\\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n            border-radius: 10px;\\r\\n            padding-bottom: 150px; /* Add more padding to the bottom */\\r\\n            overflow: auto; /* Make the table scrollable */\\r\\n            max-height: 70vh; /* Limit the maximum height for scrolling */\\r\\n        }\\r\\n\\r\\n        table {\\r\\n            width: 100%; /* Stretch the table to fill the container */\\r\\n            border-collapse: collapse;\\r\\n        }\\r\\n\\r\\n        th, td {\\r\\n            padding: 15px;\\r\\n            text-align: left;\\r\\n            border-bottom: 1px solid #ddd;\\r\\n        }\\r\\n\\r\\n        th {\\r\\n            background-color: #009B8F;\\r\\n            color: #fff;\\r\\n            font-weight: bold;\\r\\n        }\\r\\n\\r\\n        tr:nth-child(even) {\\r\\n            background-color: #f2f2f2;\\r\\n        }\\r\\n\\r\\n        .back-button {\\r\\n            position: fixed;\\r\\n            bottom: 20px;\\r\\n            right: 20px;\\r\\n            padding: 10px 50px;\\r\\n            font-size: 1em;\\r\\n            color: #323430;\\r\\n            background-color: #F8FFED;\\r\\n            border: none;\\r\\n            border-radius: 25px;\\r\\n            cursor: pointer;\\r\\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n            z-index: 1000;\\r\\n        }\\r\\n\\r\\n        .back-button:hover {\\r\\n            background-color: #40E0D0;\\r\\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\r\\n        }\\r\\n    </style>\\r\\n</head>\\r\\n<body>\\r\\n    <header>\\r\\n        <div class=\\"header-left\\">\\r\\n            <img src=\\"/files/PERFORMANCE MONITORING ICON.png\\" alt=\\"Performance Icon\\">\\r\\n        </div>\\r\\n        <div class=\\"header-right\\">\\r\\n            <img src=\\"/files/new logo.png\\" alt=\\"School Logo\\">\\r\\n        </div>\\r\\n    </header>\\r\\n    <main>\\r\\n        <div class=\\"table-container\\">\\r\\n            <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Student ID</th>\\r\\n                        <th>Attendance Points</th>\\r\\n                        <th>Assignment Points</th>\\r\\n                        <th>Final Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <!-- Data will be populated here by JavaScript -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </main>\\r\\n    <button class=\\"back-button\\" id=\\"back-button\\">Back</button>\\r\\n    <script>\\r\\n        document.addEventListener(\'DOMContentLoaded\', () => {\\r\\n            const loggedInUserEmail = frappe.session.user;\\r\\n\\r\\n            Promise.all([\\r\\n                fetch(\'/api/resource/Student?fields=[\\"name\\",\\"student_name\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Assignment?fields=[\\"student\\",\\"score\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Attendance?fields=[\\"student\\",\\"status\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data)\\r\\n            ]).then(([students, assignments, attendance]) => {\\r\\n                let filteredStudents;\\r\\n                if (loggedInUserEmail === \'joric@newuser.com\') {\\r\\n                    filteredStudents = students;\\r\\n                } else {\\r\\n                    filteredStudents = students.filter(student => student.student_email_id === loggedInUserEmail);\\r\\n                }\\r\\n\\r\\n                renderGradesTable(filteredStudents, assignments, attendance);\\r\\n            }).catch(error => {\\r\\n                console.error(\'Error fetching data:\', error);\\r\\n            });\\r\\n\\r\\n            function renderGradesTable(students, assignments, attendance) {\\r\\n                const tbody = document.querySelector(\'tbody\');\\r\\n                tbody.innerHTML = \'\'; // Clear existing rows\\r\\n\\r\\n                students.forEach(student => {\\r\\n                    const studentAssignments = assignments.filter(a => a.student === student.name);\\r\\n                    const studentAttendance = attendance.filter(a => a.student === student.name);\\r\\n\\r\\n                    const finalGrade = calculateFinalGrade(studentAssignments, studentAttendance);\\r\\n\\r\\n                    const row = document.createElement(\'tr\');\\r\\n\\r\\n                    const studentNameCell = document.createElement(\'td\');\\r\\n                    studentNameCell.textContent = student.student_name || \'N/A\';\\r\\n                    row.appendChild(studentNameCell);\\r\\n\\r\\n                    const totalAttendancePointsCell = document.createElement(\'td\');\\r\\n                    totalAttendancePointsCell.textContent = finalGrade.attendancePoints;\\r\\n                    row.appendChild(totalAttendancePointsCell);\\r\\n\\r\\n                    const totalAssignmentPointsCell = document.createElement(\'td\');\\r\\n                    totalAssignmentPointsCell.textContent = finalGrade.assignmentPoints;\\r\\n                    row.appendChild(totalAssignmentPointsCell);\\r\\n\\r\\n                    const finalRatingCell = document.createElement(\'td\');\\r\\n                    finalRatingCell.textContent = finalGrade.finalGrade;\\r\\n                    row.appendChild(finalRatingCell);\\r\\n\\r\\n                    tbody.appendChild(row);\\r\\n                });\\r\\n            }\\r\\n\\r\\n            function calculateFinalGrade(assignments, attendance) {\\r\\n                // Assign values to status based on the given criteria\\r\\n                const statusValues = {\\r\\n                    \'P\': 5,\\r\\n                    \'A\': 0,\\r\\n                    \'MA\': 3,\\r\\n                    \'AA\': 4,\\r\\n                    \'EX\': 3,\\r\\n                    \'ACT\': 4\\r\\n                };\\r\\n\\r\\n                // Calculate total attendance points\\r\\n                let totalAttendancePoints = 0;\\r\\n                attendance.forEach(record => {\\r\\n                    const status = record.status;\\r\\n                    const value = statusValues[status] || 0;\\r\\n                    totalAttendancePoints += value;\\r\\n                });\\r\\n\\r\\n                // Calculate total assignment points\\r\\n                let totalAssignmentPoints = 0;\\r\\n                assignments.forEach(assignment => {\\r\\n                    const score = parseFloat(assignment.score) || 0;\\r\\n                    totalAssignmentPoints += score;\\r\\n                });\\r\\n\\r\\n                // Calculate final grade based on weighted percentages (Attendance: 30%, Assignments: 70%)\\r\\n                const attendanceWeight = 0.3;\\r\\n                const assignmentWeight = 0.7;\\r\\n\\r\\n                const totalPoints = totalAttendancePoints * attendanceWeight + totalAssignmentPoints * assignmentWeight;\\r\\n                const maxPossiblePoints = (attendance.length * 5) * attendanceWeight + (assignments.length * 100) * assignmentWeight;\\r\\n                const percentage = (totalPoints / maxPossiblePoints) * 100;\\r\\n\\r\\n                let finalGrade;\\r\\n                if (percentage >= 98) {\\r\\n                    finalGrade = \'1.0 (Excellent)\';\\r\\n                } else if (percentage >= 95) {\\r\\n                    finalGrade = \'1.25\';\\r\\n                } else if (percentage >= 92) {\\r\\n                    finalGrade = \'1.50\';\\r\\n                } else if (percentage >= 89) {\\r\\n                    finalGrade = \'1.75\';\\r\\n                } else if (percentage >= 86) {\\r\\n                    finalGrade = \'2.00 (Very Good)\';\\r\\n                } else if (percentage >= 83) {\\r\\n                    finalGrade = \'2.25\';\\r\\n                } else if (percentage >= 80) {\\r\\n                    finalGrade = \'2.50\';\\r\\n                } else if (percentage >= 77) {\\r\\n                    finalGrade = \'2.75\';\\r\\n                } else if (percentage >= 75) {\\r\\n                    finalGrade = \'3.00 (Good)\';\\r\\n                } else {\\r\\n                    finalGrade = \'Failed\';\\r\\n                }\\r\\n\\r\\n                return {\\r\\n                    attendancePoints: totalAttendancePoints,\\r\\n                    assignmentPoints: totalAssignmentPoints,\\r\\n                    finalGrade: finalGrade\\r\\n                };\\r\\n            }\\r\\n\\r\\n            // Add click event to back button\\r\\n            const backButton = document.getElementById(\'back-button\');\\r\\n            backButton.addEventListener(\'click\', () => {\\r\\n                window.history.back();\\r\\n            });\\r\\n        });\\r\\n    </script>\\r\\n</body>\\r\\n</html>\\r\\n","insert_style":0,"text_align":"Left","full_width":1,"show_title":0,"show_sidebar":0,"enable_comments":0,"doctype":"Web Page","page_blocks":[{"name":"sjsptsg3db","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":1,"web_template":"Section with Collapsible Content","add_container":1,"add_top_padding":1,"add_bottom_padding":1,"add_border_at_top":0,"add_border_at_bottom":0,"add_shade":0,"hide_block":0,"add_background_image":0,"parent":"performance","parentfield":"page_blocks","parenttype":"Web Page","doctype":"Web Page Block"}],"__onload":{"is_website_generator":true,"published":true},"__last_sync_on":"2024-06-19T17:50:12.902Z","__unsaved":1}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/app.py", line 115, in application
    response = frappe.api.handle(request)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/__init__.py", line 49, in handle
    data = endpoint(**arguments)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/v1.py", line 36, in handle_rpc_call
    return frappe.handler.handle()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 49, in handle
    data = execute_cmd(cmd)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 85, in execute_cmd
    return frappe.call(method, **frappe.form_dict)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1768, in call
    return fn(*args, **newargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/typing_validations.py", line 31, in wrapper
    return func(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/desk/form/save.py", line 18, in savedocs
    doc = frappe.get_doc(json.loads(doc))
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 86, in log_error_snapshot
    log_error(title=str(exception), defer_insert=True)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 61, in log_error
    error_log = frappe.get_doc(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
2024-06-20 06:15:22,323 ERROR frappe Could not take error snapshot: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
Site: capstone.local
Form Dict: {'doc': '{"name":"performance","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":0,"title":"Performance","route":"performance","dynamic_route":0,"published":1,"content_type":"HTML","dynamic_template":0,"main_section_html":"<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"UTF-8\\">\\r\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\r\\n    <title>Student Grades - Green Field Elementary School System</title>\\r\\n    <style>\\r\\n        body {\\r\\n            font-family: Arial, sans-serif;\\r\\n            background: linear-gradient(to right, #0097b2, #7ed757);\\r\\n            margin: 0;\\r\\n            padding: 0;\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            height: 100vh;\\r\\n            width: 100vw;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n\\r\\n        header {\\r\\n            display: flex;\\r\\n            justify-content: space-between;\\r\\n            width: 100%;\\r\\n            padding: 5px 20px;\\r\\n            align-items: center;\\r\\n            box-sizing: border-box;\\r\\n            max-width: 1000px; /* Fixed width for the header */\\r\\n            margin: 0 auto; /* Center align the header */\\r\\n        }\\r\\n\\r\\n        .header-left, .header-right {\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-left img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-right: 600px;\\r\\n            margin-left: 0px;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .header-right img {\\r\\n            width: 250px;\\r\\n            height: 250px;\\r\\n            margin-left: 10px;\\r\\n            margin-right: 0px;\\r\\n        }\\r\\n\\r\\n        main {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n            flex: 1;\\r\\n            width: 100%;\\r\\n            padding: 20px;\\r\\n            box-sizing: border-box;\\r\\n        }\\r\\n\\r\\n        .table-container {\\r\\n            width: 100%; /* Increased width for the table container */\\r\\n            background-color: #fff;\\r\\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n            border-radius: 10px;\\r\\n            padding-bottom: 150px; /* Add more padding to the bottom */\\r\\n            overflow: auto; /* Make the table scrollable */\\r\\n            max-height: 70vh; /* Limit the maximum height for scrolling */\\r\\n        }\\r\\n\\r\\n        table {\\r\\n            width: 100%; /* Stretch the table to fill the container */\\r\\n            border-collapse: collapse;\\r\\n        }\\r\\n\\r\\n        th, td {\\r\\n            padding: 15px;\\r\\n            text-align: left;\\r\\n            border-bottom: 1px solid #ddd;\\r\\n        }\\r\\n\\r\\n        th {\\r\\n            background-color: #009B8F;\\r\\n            color: #fff;\\r\\n            font-weight: bold;\\r\\n        }\\r\\n\\r\\n        tr:nth-child(even) {\\r\\n            background-color: #f2f2f2;\\r\\n        }\\r\\n\\r\\n        .back-button {\\r\\n            position: fixed;\\r\\n            bottom: 20px;\\r\\n            right: 20px;\\r\\n            padding: 10px 50px;\\r\\n            font-size: 1em;\\r\\n            color: #323430;\\r\\n            background-color: #F8FFED;\\r\\n            border: none;\\r\\n            border-radius: 25px;\\r\\n            cursor: pointer;\\r\\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n            z-index: 1000;\\r\\n        }\\r\\n\\r\\n        .back-button:hover {\\r\\n            background-color: #40E0D0;\\r\\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\r\\n        }\\r\\n    </style>\\r\\n</head>\\r\\n<body>\\r\\n    <header>\\r\\n        <div class=\\"header-left\\">\\r\\n            <img src=\\"/files/PERFORMANCE MONITORING ICON.png\\" alt=\\"Performance Icon\\">\\r\\n        </div>\\r\\n        <div class=\\"header-right\\">\\r\\n            <img src=\\"/files/new logo.png\\" alt=\\"School Logo\\">\\r\\n        </div>\\r\\n    </header>\\r\\n    <main>\\r\\n        <div class=\\"table-container\\">\\r\\n            <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Student ID</th>\\r\\n                        <th>Attendance Points</th>\\r\\n                        <th>Assignment Points</th>\\r\\n                        <th>Final Rating</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <!-- Data will be populated here by JavaScript -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </main>\\r\\n    <button class=\\"back-button\\" id=\\"back-button\\">Back</button>\\r\\n    <script>\\r\\n        document.addEventListener(\'DOMContentLoaded\', () => {\\r\\n            const loggedInUserEmail = frappe.session.user;\\r\\n\\r\\n            Promise.all([\\r\\n                fetch(\'/api/resource/Student?fields=[\\"name\\",\\"student_name\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Assignment?fields=[\\"student\\",\\"score\\",\\"student_email_id\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data),\\r\\n                fetch(\'/api/resource/Attendance?fields=[\\"student\\",\\"status\\"]\')\\r\\n                    .then(response => response.json())\\r\\n                    .then(data => data.data)\\r\\n            ]).then(([students, assignments, attendance]) => {\\r\\n                let filteredStudents;\\r\\n                if (loggedInUserEmail === \'joric@newuser.com\') {\\r\\n                    filteredStudents = students;\\r\\n                } else {\\r\\n                    filteredStudents = students.filter(student => student.student_email_id === loggedInUserEmail);\\r\\n                }\\r\\n\\r\\n                renderGradesTable(filteredStudents, assignments, attendance);\\r\\n            }).catch(error => {\\r\\n                console.error(\'Error fetching data:\', error);\\r\\n            });\\r\\n\\r\\n            function renderGradesTable(students, assignments, attendance) {\\r\\n                const tbody = document.querySelector(\'tbody\');\\r\\n                tbody.innerHTML = \'\'; // Clear existing rows\\r\\n\\r\\n                students.forEach(student => {\\r\\n                    const studentAssignments = assignments.filter(a => a.student === student.name);\\r\\n                    const studentAttendance = attendance.filter(a => a.student === student.name);\\r\\n\\r\\n                    const finalGrade = calculateFinalGrade(studentAssignments, studentAttendance);\\r\\n\\r\\n                    const row = document.createElement(\'tr\');\\r\\n\\r\\n                    const studentNameCell = document.createElement(\'td\');\\r\\n                    studentNameCell.textContent = student.student_name || \'N/A\';\\r\\n                    row.appendChild(studentNameCell);\\r\\n\\r\\n                    const totalAttendancePointsCell = document.createElement(\'td\');\\r\\n                    totalAttendancePointsCell.textContent = finalGrade.attendancePoints;\\r\\n                    row.appendChild(totalAttendancePointsCell);\\r\\n\\r\\n                    const totalAssignmentPointsCell = document.createElement(\'td\');\\r\\n                    totalAssignmentPointsCell.textContent = finalGrade.assignmentPoints;\\r\\n                    row.appendChild(totalAssignmentPointsCell);\\r\\n\\r\\n                    const finalRatingCell = document.createElement(\'td\');\\r\\n                    finalRatingCell.textContent = finalGrade.finalGrade;\\r\\n                    row.appendChild(finalRatingCell);\\r\\n\\r\\n                    tbody.appendChild(row);\\r\\n                });\\r\\n            }\\r\\n\\r\\n            function calculateFinalGrade(assignments, attendance) {\\r\\n                // Assign values to status based on the given criteria\\r\\n                const statusValues = {\\r\\n                    \'P\': 5,\\r\\n                    \'A\': 0,\\r\\n                    \'MA\': 3,\\r\\n                    \'AA\': 4,\\r\\n                    \'EX\': 3,\\r\\n                    \'ACT\': 4\\r\\n                };\\r\\n\\r\\n                // Calculate total attendance points\\r\\n                let totalAttendancePoints = 0;\\r\\n                attendance.forEach(record => {\\r\\n                    const status = record.status;\\r\\n                    const value = statusValues[status] || 0;\\r\\n                    totalAttendancePoints += value;\\r\\n                });\\r\\n\\r\\n                // Calculate total assignment points\\r\\n                let totalAssignmentPoints = 0;\\r\\n                assignments.forEach(assignment => {\\r\\n                    const score = parseFloat(assignment.score) || 0;\\r\\n                    totalAssignmentPoints += score;\\r\\n                });\\r\\n\\r\\n                // Calculate final grade based on weighted percentages (Attendance: 30%, Assignments: 70%)\\r\\n                const attendanceWeight = 0.3;\\r\\n                const assignmentWeight = 0.7;\\r\\n\\r\\n                const totalPoints = totalAttendancePoints * attendanceWeight + totalAssignmentPoints * assignmentWeight;\\r\\n                const maxPossiblePoints = (attendance.length * 5) * attendanceWeight + (assignments.length * 100) * assignmentWeight;\\r\\n                const percentage = (totalPoints / maxPossiblePoints) * 100;\\r\\n\\r\\n                let finalGrade;\\r\\n                if (percentage >= 98) {\\r\\n                    finalGrade = \'1.0 (Excellent)\';\\r\\n                } else if (percentage >= 95) {\\r\\n                    finalGrade = \'1.25\';\\r\\n                } else if (percentage >= 92) {\\r\\n                    finalGrade = \'1.50\';\\r\\n                } else if (percentage >= 89) {\\r\\n                    finalGrade = \'1.75\';\\r\\n                } else if (percentage >= 86) {\\r\\n                    finalGrade = \'2.00 (Very Good)\';\\r\\n                } else if (percentage >= 83) {\\r\\n                    finalGrade = \'2.25\';\\r\\n                } else if (percentage >= 80) {\\r\\n                    finalGrade = \'2.50\';\\r\\n                } else if (percentage >= 77) {\\r\\n                    finalGrade = \'2.75\';\\r\\n                } else if (percentage >= 75) {\\r\\n                    finalGrade = \'3.00 (Good)\';\\r\\n                } else {\\r\\n                    finalGrade = \'Failed\';\\r\\n                }\\r\\n\\r\\n                return {\\r\\n                    attendancePoints: totalAttendancePoints,\\r\\n                    assignmentPoints: totalAssignmentPoints,\\r\\n                    finalGrade: finalGrade\\r\\n                };\\r\\n            }\\r\\n\\r\\n            // Add click event to back button\\r\\n            const backButton = document.getElementById(\'back-button\');\\r\\n            backButton.addEventListener(\'click\', () => {\\r\\n                window.history.back();\\r\\n            });\\r\\n        });\\r\\n    </script>\\r\\n</body>\\r\\n</html>\\r\\n","insert_style":0,"text_align":"Left","full_width":1,"show_title":0,"show_sidebar":0,"enable_comments":0,"doctype":"Web Page","page_blocks":[{"name":"sjsptsg3db","owner":"joricbart@admin.com","creation":"2024-06-06 16:01:09.636087","modified":"2024-06-17 14:51:06.298759","modified_by":"joric@newuser.com","docstatus":0,"idx":1,"web_template":"Section with Collapsible Content","add_container":1,"add_top_padding":1,"add_bottom_padding":1,"add_border_at_top":0,"add_border_at_bottom":0,"add_shade":0,"hide_block":0,"add_background_image":0,"parent":"performance","parentfield":"page_blocks","parenttype":"Web Page","doctype":"Web Page Block"}],"__onload":{"is_website_generator":true,"published":true},"__last_sync_on":"2024-06-19T17:50:12.902Z","__unsaved":1}', 'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}
Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/app.py", line 115, in application
    response = frappe.api.handle(request)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/__init__.py", line 49, in handle
    data = endpoint(**arguments)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/api/v1.py", line 36, in handle_rpc_call
    return frappe.handler.handle()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 49, in handle
    data = execute_cmd(cmd)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/handler.py", line 85, in execute_cmd
    return frappe.call(method, **frappe.form_dict)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1768, in call
    return fn(*args, **newargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/typing_validations.py", line 31, in wrapper
    return func(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/desk/form/save.py", line 18, in savedocs
    doc = frappe.get_doc(json.loads(doc))
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 649, in connect
    sock = socket.create_connection(
  File "/usr/lib/python3.10/socket.py", line 845, in create_connection
    raise err
  File "/usr/lib/python3.10/socket.py", line 833, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 86, in log_error_snapshot
    log_error(title=str(exception), defer_insert=True)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/utils/error.py", line 61, in log_error
    error_log = frappe.get_doc(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/__init__.py", line 1333, in get_doc
    doc = frappe.model.document.get_doc(*args, **kwargs)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/document.py", line 83, in get_doc
    controller = get_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 66, in get_controller
    return import_controller(doctype)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/model/base_document.py", line 81, in import_controller
    doctype_info = frappe.db.get_value("DocType", doctype, fieldname="*")
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 519, in get_value
    result = self.get_values(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 623, in get_values
    out = self._get_values_from_table(
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 896, in _get_values_from_table
    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/query_builder/utils.py", line 87, in execute_query
    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 211, in sql
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/database.py", line 117, in connect
    self._conn: "MariadbConnection" | "PostgresConnection" = self.get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 107, in get_connection
    conn = self._get_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 113, in _get_connection
    return self.create_connection()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/apps/frappe/frappe/database/mariadb/database.py", line 116, in create_connection
    return pymysql.connect(**self.get_connection_settings())
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 361, in __init__
    self.connect()
  File "/home/joric/wsl-frappe/frappe-bench/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py", line 716, in connect
    raise exc
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)")
